package com.lsp.testaa.web;

import java.util.HashMap;
import java.util.List;

import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.factory.annotation.Autowired;

import com.lsp.pub.dao.BaseDao;
import com.lsp.pub.db.MongoSequence;
import com.lsp.pub.entity.PubConstants;
import com.lsp.pub.util.DictionaryUtil;
import com.lsp.pub.util.SpringSecurityUtils;
import com.lsp.pub.util.Struts2Utils;
import com.lsp.pub.web.GeneralAction;
import com.lsp.testaa.entity.TestAa;
import com.lsp.website.service.WwzService;
import com.mongodb.DBObject;
@Namespace("/testaa")
@Results({@org.apache.struts2.convention.annotation.Result(name = TestaaAction.RELOAD, location = "testaa.action", type = "redirect") })

public class TestaaAction  extends GeneralAction<TestAa> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	
	
	@Autowired
	private BaseDao baseDao;
	@Autowired
	private WwzService wwzService;
	@Autowired
	private DictionaryUtil dictionaryUtil;
	private MongoSequence mongoSequence;
	public static final String RELOAD = "reload";
	private Long _id;

	@Autowired
	public void setMongoSequence(MongoSequence mongoSequence) {
		this.mongoSequence = mongoSequence;
	}

	/**
	 * 主页面
	 * 
	 * @return
	 * @throws Exception
	 */
	
	public String index() throws Exception {
		//String comid = Struts2Utils.getParameter("comid"); 
		HashMap<String, Object> sortMap = new HashMap<String, Object>();
		HashMap<String, Object> whereMap = new HashMap<String, Object>();
		sortMap.put("sort", 1);
		List<DBObject> list = baseDao.getList(PubConstants.TEST_AA, whereMap, sortMap);
		Struts2Utils.getRequest().setAttribute("aalist", list);
		 
		return "testaa";
		 

	}
	
	
	@Override
	public String execute() throws Exception {
 
		HashMap<String, Object> sortMap = new HashMap<String, Object>();
		HashMap<String, Object> whereMap = new HashMap<String, Object>();
		sortMap.put("sort", 1);
		List<DBObject> list = baseDao.getList(PubConstants.TEST_AA, whereMap, sortMap);
		Struts2Utils.getRequest().setAttribute("aalist", list);
		 
		return "testaa";
	}
	
	
 
	 
	@Override
	public String input() throws Exception {
		// TODO Auto-generated method stub
		return "test-add";
	}

	@Override
	public String update() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String save() throws Exception {
		// TODO Auto-generated method stub
		
		TestAa obj1 = new TestAa();
		if (_id == null) {
			_id = mongoSequence.currval(PubConstants.SHOP_SHOPTYPE);
		}
		
		String username  =Struts2Utils.getParameter("username");
		String email  =Struts2Utils.getParameter("email");
		String passwd  =Struts2Utils.getParameter("passwd");
		obj1.set_id(_id);
		obj1.setEmail(email);
		obj1.setPasswd(passwd);
		obj1.setUsername(username);
		this.baseDao.insert(PubConstants.TEST_AA,  obj1);
	 
		return  RELOAD;
	}

	@Override
	public String delete() throws Exception {
		try {
		    String id =Struts2Utils.getParameter("_id");
		    System.out.println("-----------id:"+id);
			baseDao.delete(PubConstants.TEST_AA, _id);
			addActionMessage("成功删除!");
		} catch (Exception e) {
			e.printStackTrace();
			addActionMessage("抱歉,删除过程中出现异常!");
		}
		return RELOAD;
	}

	@Override
	protected void prepareModel() throws Exception {
		// TODO Auto-generated method stub
		
	}

	public Long get_id() {
		return _id;
	}

	public void set_id(Long _id) {
		this._id = _id;
	}

	@Override
	public TestAa getModel() {
		// TODO Auto-generated method stub
		return null;
	}
	
	

}
