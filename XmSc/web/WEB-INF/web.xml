<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<!-- <resource-ref id="ResourceRef_1216699055547"> <description/> <res-ref-name>GouworkDB2</res-ref-name> 
		<res-type>javax.sql.DataSource</res-type> <res-auth>Container</res-auth> 
		<res-sharing-scope>Shareable</res-sharing-scope> </resource-ref> -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	<display-name>XmScDB</display-name>
	<!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring Context 
		Loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:/applicationContext.xml  
			classpath*:/applicationContext-security.xml 
			classpath*:/applicationContext-quartz.xml 
		</param-value>
	</context-param>
	
 	<filter>
        <filter-name>URLFilter</filter-name>
        <filter-class>com.lsp.pub.entity.URLFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>URLFilter</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>

	<!-- Filter 定义 -->
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- SpringSecurity filter -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<!-- Struts2 filter -->
	<!-- Struts2 
	<filter>
		<filter-name>struts2CleanupFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	filter -->
	<filter>
		<filter-name>struts2Filter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<!-- Filter 映射 -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	 <filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<!--  
	<filter-mapping>
		<filter-name>struts2CleanupFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	-->
	<filter-mapping>
		<filter-name>struts2Filter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!--限制单个用户只能登录到你的程序一次 -->
	<listener>
		<listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
	</listener> 
	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>-1</session-timeout>
	</session-config>
	 <!-- 出错页面定义 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/webcom/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/webcom/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/webcom/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/webcom/403.jsp</location>
	</error-page>
	<!-- <security-constraint> <display-name>Secured</display-name> <web-resource-collection> 
		<web-resource-name>MailReader Demonstration Application</web-resource-name> 
		<description>Protection area for MailReader</description> <url-pattern>*.action</url-pattern> 
		<http-method>GET</http-method> <http-method>POST</http-method> </web-resource-collection> 
		<auth-constraint> <description>All Authenticated users for MailReader</description> 
		<role-name>All Role</role-name> </auth-constraint> <user-data-constraint> 
		<transport-guarantee>NONE</transport-guarantee> </user-data-constraint> </security-constraint> 
		<login-config> <auth-method>FORM</auth-method> <form-login-config> <form-login-page>/login.action</form-login-page> 
		<form-error-page>/login!error.action</form-error-page> </form-login-config> 
		</login-config> <security-role> <description>All Authenticated Users Role.</description> 
		<role-name>All Role</role-name> </security-role> -->
	<servlet>
		<servlet-name>Upload</servlet-name>
		<servlet-class>com.lsp.pub.web.UploadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Upload</servlet-name>
		<url-pattern>/Upload</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ImageUpload</servlet-name>
		<servlet-class>com.lsp.pub.web.ImageServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ImageUpload</servlet-name>
		<url-pattern>/ImageUpload</url-pattern>
	</servlet-mapping>
 
 
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	  <listener>  
  
        <listener-class>org.directwebremoting.servlet.DwrListener</listener-class>  
  
    </listener>  
	
 
  
</web-app>
